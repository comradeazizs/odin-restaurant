(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>g});var o=t(537),a=t.n(o),r=t(645),i=t.n(r),c=t(667),d=t.n(c),l=new URL(t(963),t.b),s=new URL(t(293),t.b),p=new URL(t(762),t.b),A=new URL(t(303),t.b),f=i()(a()),u=d()(l),h=d()(s),m=d()(p),C=d()(A);f.push([e.id,`@font-face {\n   font-family: "Tagettes";\n   src: url(${u}) format("woff2"),\n      url(${h}) format("woff");\n   font-weight: 600;\n   font-style: normal;\n}\n@font-face {\n   font-family: "Lato";\n   src: url(${m}) format("woff2"),\n      url(${C}) format("woff");\n   font-weight: 600;\n   font-style: normal;\n}\n* {\n   font-family: "Lato";\n}\nmain ,\nsection{\n   margin-left: 20px;\n}\n\nbody {\n   margin: 0;\n}\nheader > .img-cont > img {\n   height: 65px;\n   width: auto;\n}\nheader > .img-cont {\n   flex: 1;\n   height: 65px;\n}\n\nheader {\n   display: flex;\n   align-items: center;\n   background-color: #1c1c1c;\n   color: white;\n   gap: 10px;\n}\n.tab:hover {\n   color: gold;\n   text-decoration: underline;\n   cursor: pointer;\n}\n.tab,\nheader h1 {\n   font-family: "Tagettes";\n}\n\nheader > h1 {\n   margin: 20px 2rem;\n}\nnav {\n   display: flex;\n   flex-direction: row;\n   justify-content: space-around;\n   width: 400px;\n}\n.tab,p, table {\n   font-size: 1.5rem;\n}\n\nmain > img {\n   height: auto;\n   width: 60vw;\n}\n\ntable,\ntd,\nth {\n   border: 1px solid black;\n   border-collapse: collapse;\n}\n.price::after{\n   content: "\\0024";\n}\n.price{\n   text-align: center;\n}\nthead>tr>th:nth-child(2){\n   width: 100px;\n}\nthead>tr>th:nth-child(1){\n   width: 1000px;\n}\nsection>h2{\n   font-family: "Tagettes";\n}\n\ntr>td:nth-child(1){\n   padding-left: 20px;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;GACG,uBAAuB;GACvB;4DAC8D;GAC9D,gBAAgB;GAChB,kBAAkB;AACrB;AACA;GACG,mBAAmB;GACnB;4DACwD;GACxD,gBAAgB;GAChB,kBAAkB;AACrB;AACA;GACG,mBAAmB;AACtB;AACA;;GAEG,iBAAiB;AACpB;;AAEA;GACG,SAAS;AACZ;AACA;GACG,YAAY;GACZ,WAAW;AACd;AACA;GACG,OAAO;GACP,YAAY;AACf;;AAEA;GACG,aAAa;GACb,mBAAmB;GACnB,yBAAyB;GACzB,YAAY;GACZ,SAAS;AACZ;AACA;GACG,WAAW;GACX,0BAA0B;GAC1B,eAAe;AAClB;AACA;;GAEG,uBAAuB;AAC1B;;AAEA;GACG,iBAAiB;AACpB;AACA;GACG,aAAa;GACb,mBAAmB;GACnB,6BAA6B;GAC7B,YAAY;AACf;AACA;GACG,iBAAiB;AACpB;;AAEA;GACG,YAAY;GACZ,WAAW;AACd;;AAEA;;;GAGG,uBAAuB;GACvB,yBAAyB;AAC5B;AACA;GACG,gBAAgB;AACnB;AACA;GACG,kBAAkB;AACrB;AACA;GACG,YAAY;AACf;AACA;GACG,aAAa;AAChB;AACA;GACG,uBAAuB;AAC1B;;AAEA;GACG,kBAAkB;AACrB",sourcesContent:['@font-face {\n   font-family: "Tagettes";\n   src: url("./fonts/tagettes.regular-webfont.woff2") format("woff2"),\n      url("./fonts/tagettes.regular-webfont.woff") format("woff");\n   font-weight: 600;\n   font-style: normal;\n}\n@font-face {\n   font-family: "Lato";\n   src: url("./fonts/lato-light-webfont.woff2") format("woff2"),\n      url("./fonts/lato-light-webfont.woff") format("woff");\n   font-weight: 600;\n   font-style: normal;\n}\n* {\n   font-family: "Lato";\n}\nmain ,\nsection{\n   margin-left: 20px;\n}\n\nbody {\n   margin: 0;\n}\nheader > .img-cont > img {\n   height: 65px;\n   width: auto;\n}\nheader > .img-cont {\n   flex: 1;\n   height: 65px;\n}\n\nheader {\n   display: flex;\n   align-items: center;\n   background-color: #1c1c1c;\n   color: white;\n   gap: 10px;\n}\n.tab:hover {\n   color: gold;\n   text-decoration: underline;\n   cursor: pointer;\n}\n.tab,\nheader h1 {\n   font-family: "Tagettes";\n}\n\nheader > h1 {\n   margin: 20px 2rem;\n}\nnav {\n   display: flex;\n   flex-direction: row;\n   justify-content: space-around;\n   width: 400px;\n}\n.tab,p, table {\n   font-size: 1.5rem;\n}\n\nmain > img {\n   height: auto;\n   width: 60vw;\n}\n\ntable,\ntd,\nth {\n   border: 1px solid black;\n   border-collapse: collapse;\n}\n.price::after{\n   content: "\\0024";\n}\n.price{\n   text-align: center;\n}\nthead>tr>th:nth-child(2){\n   width: 100px;\n}\nthead>tr>th:nth-child(1){\n   width: 1000px;\n}\nsection>h2{\n   font-family: "Tagettes";\n}\n\ntr>td:nth-child(1){\n   padding-left: 20px;\n}'],sourceRoot:""}]);const g=f},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&i[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},i=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=r[l]||0,p="".concat(l," ").concat(s);r[l]=s+1;var A=t(p),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)n[A].references++,n[A].updater(f);else{var u=a(f,o);o.byIndex=c,n.splice(c,0,{identifier:p,updater:u,references:1})}i.push(p)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var c=t(r[i]);n[c].references--}for(var d=o(e,a),l=0;l<r.length;l++){var s=t(r[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}r=d}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},303:(e,n,t)=>{e.exports=t.p+"eb6ac1412bbf32aacc80.woff"},762:(e,n,t)=>{e.exports=t.p+"d182d73f02e3833db6c0.woff2"},293:(e,n,t)=>{e.exports=t.p+"303b90d03a7d0d1ed33b.woff"},963:(e,n,t)=>{e.exports=t.p+"3a92a2de6d2539613978.woff2"}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),a=t.n(o),r=t(569),i=t.n(r),c=t(565),d=t.n(c),l=t(216),s=t.n(l),p=t(589),A=t.n(p),f=t(426),u={};u.styleTagTransform=A(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=s(),n()(f.Z,u),f.Z&&f.Z.locals&&f.Z.locals;const h=t.p+"42ff33da246f9500e117.png",m=t.p+"f34edfc62267016b1e0c.webp";function C(){const e=document.createElement("main"),n=document.createElement("h2");n.appendChild(document.createTextNode("Traditional dishes of the Emilian cuisine")),e.appendChild(n);const t=new Image;t.src=m,e.appendChild(t);const o=document.createElement("p");o.appendChild(document.createTextNode("A timeless cuisine serving dishes of the Emilian tradition: from the most popular dishes, like tagliatelle Bolognese and tortellini in broth, to the rare and much-appreciated boiled meat")),e.appendChild(o),content.appendChild(e)}const g=document.querySelector("#content");let b=[{name:"Tagliatelle Bolognese",price:21},{name:"Tagliolini with Culatello di Zibello in White Sauce",price:21},{name:"Tortellini Bolognese",price:24},{name:"Spaghettini with Bottarga (Mullet Roe)",price:24},{name:"Green Lasagna Bolognese",price:22},{name:"Homemade Tortelloni with Ricotta Cheese and Spinach",price:22},{name:"Bolognese Fried Risotto",price:22},{name:"Gragnano Spaghetti with Lobster",price:38},{name:"Fresh Tomato Soup",price:18}];!function e(){const n=document.createElement("header"),t=document.createElement("h1");t.appendChild(document.createTextNode("Bolognese")),n.appendChild(t);const o=new Image;o.src=h;const a=document.createElement("div");a.classList.add("img-cont"),a.appendChild(o),n.appendChild(a);const r=document.createElement("nav");["Home","Menu","Contact"].forEach((n=>{let t=document.createElement("div");t.classList.add("tab",n.toLowerCase()),t.innerText=n,t.addEventListener("click",(n=>{!function(){for(;g.firstChild;)g.removeChild(g.firstChild)}(),e(),n.target.classList.contains("home")?C():n.target.classList.contains("menu")?function(e){const n=document.createElement("section"),t=document.createElement("h2");t.appendChild(document.createTextNode("Menu")),n.appendChild(t);const o=document.createElement("table"),a=document.createElement("thead"),r=document.createElement("tr");["Meal","Price"].forEach((e=>{let n=document.createElement("th");n.appendChild(document.createTextNode(e)),r.appendChild(n)}));const i=document.createElement("tbody");e.forEach((e=>{const n=document.createElement("tr"),t=document.createElement("td");t.appendChild(document.createTextNode(e.name)),n.appendChild(t);const o=document.createElement("td");o.classList.add("price"),o.appendChild(document.createTextNode(e.price)),n.appendChild(o),i.appendChild(n)})),a.appendChild(r),o.appendChild(a),o.appendChild(i),n.appendChild(o),content.appendChild(n)}(b):n.target.classList.contains("contact")&&function(){const e=document.createElement("section"),n=document.createElement("h2");n.appendChild(document.createTextNode("Contact")),e.appendChild(n);const t=document.createElement("p");t.appendChild(document.createTextNode("Number: 012 345 6789")),e.appendChild(t),t.appendChild(document.createElement("br"));const o=document.createElement("p");t.appendChild(document.createTextNode("H. Z. Tagiyev, 14, Baku Azerbaijan")),e.appendChild(o),content.appendChild(e)}()})),r.appendChild(t)})),n.appendChild(r),g.appendChild(n)}(),C()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,